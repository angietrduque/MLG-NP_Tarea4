plot(c(1:T),draws_tau_2, xlab = 'Index')
abline(v=2000, col='green', lwd=2)
plot(c(1:T),draws_mu_diff[,500],ylim = c(-1.1,1.1), xlab = 'Index')
points(c(1:T),draws_mu_diff[,1], col = 'red')
points(c(1:T),draws_mu_diff[,21], col = 'blue')
abline(v=BurnIn, col="green", lwd=2)
upper = apply(draws_mu_diff[2001:T,],2,quantile,probs=0.975)
lower = apply(draws_mu_diff[2001:T,],2,quantile,probs=0.025)
plot(y_diffs,mean_mus, xlim = c(-1.55,1.55),ylim = c(-1.55,1.55))
points(y_diffs,upper, type= 'l', lwd=2,col = 'red')
points(y_diffs,lower, type= 'l', lwd=2,col = 'red')
plot(c(1:T),Ds, xlab = 'Index')
abline(v=2000, col='green', lwd=2)
mean_mus = colMeans(draws_mu_diff[2001:T,])
D_mean =  -2*sum(log(dnorm(y_diffs,mean_mus,sqrt(0.05))))
p_d = mean(Ds[2001:T])-D_mean
DIC = 2*mean(Ds[2001:T])-D_mean
DIC_null = -2*sum(log(dnorm(y_diffs,0,sqrt(0.05))))
draws_p1 = rep(0,T)
p1 = 0.5
tau_2=1/5
for(t in 1:T){
Like0 = (1-p1)*dnorm(y_diffs,0,sqrt(0.05))
LikeNot0 = p1*dnorm(y_diffs,0,sqrt(0.05+tau_2))
Probs1 = LikeNot0/(Like0+LikeNot0)
Indicator = rbinom(n=500,1,Probs1)
mus[Indicator==0] = 0
NumNot0 = sum(Indicator)
mus[Indicator==1]=rnorm(NumNot0, tau_2*y_diffs[Indicator==1]/(tau_2+0.05), sqrt(0.05*tau_2/(tau_2+0.05)))
tau_2 =1/rgamma(1,NumNot0/2, 0.5*sum(mus[Indicator==1]^2))
p1 = rbeta(1,1+NumNot0,1+500-NumNot0)
draws_p1[t] = p1
draws_tau_2[t] = tau_2
draws_mu_diff[t,] = mus
Ds[t] = -2*sum(log(dnorm(y_diffs,mus,sqrt(0.05))))
}
plot(c(1:T),draws_tau_2, xlab = 'Index')
abline(v=2000, col='green', lwd=2)
plot(c(1:T),draws_p1, xlab = 'Index')
abline(v=2000, col='green', lwd=2)
plot(c(1:T),draws_mu_diff[,500],ylim = c(-1.1,1.1), xlab = 'Index')
points(c(1:T),draws_mu_diff[,1], col = 'red')
points(c(1:T),draws_mu_diff[,21], col = 'blue')
abline(v=BurnIn, col="green", lwd=2)
ProbRed = 1-sum(draws_mu_diff[2001:T,1]==0)/N
ProbBlue = 1-sum(draws_mu_diff[2001:T,21]==0)/N
ProbBlack = 1-sum(draws_mu_diff[2001:T,500]==0)/N
mean_mus = colMeans(draws_mu_diff[2001:T,])
D_mean =  -2*sum(log(dnorm(y_diffs,mean_mus,sqrt(0.05))))
p_d = mean(Ds[2001:T])-D_mean
DIC = 2*mean(Ds[2001:T])-D_mean
DIC
mus_true = c(rep(0,400),rpareto(10,2.5,4))
y_diffs = rpareto(500,mus_true,4)
y_diffs = rpareto(500,mus_true,2.5,4)
mus_true = c(rep(0,400),rpareto(10,2.5,4))
y_diffs = runif(500,mus_true,4)
T=10000
BurnIn = 2000
N=T-BurnIn
draws_tau_2 = rep(0,T)
draws_mu_diff = matrix(nrow = T, ncol = 500)
Ds = rep(0,T)
tau_2 = 1/20 ### initialize
for(t in 1:T){ ##Run gibbs sampler
mus = rnorm(500, tau_2*y_diffs/(tau_2+0.05), sqrt(0.05*tau_2/(tau_2+0.05)))
tau_2 =1/rgamma(1,250, 0.5*sum(mus^2))
draws_tau_2[t] = tau_2
draws_mu_diff[t,] = mus
Ds[t] = -2*sum(log(dnorm(y_diffs,mus,sqrt(0.05))))
}
plot(c(1:T),draws_tau_2, xlab = 'Index')
abline(v=2000, col='green', lwd=2)
plot(c(1:T),draws_mu_diff[,500],ylim = c(-1.1,1.1), xlab = 'Index')
points(c(1:T),draws_mu_diff[,1], col = 'red')
points(c(1:T),draws_mu_diff[,21], col = 'blue')
abline(v=BurnIn, col="green", lwd=2)
upper = apply(draws_mu_diff[2001:T,],2,quantile,probs=0.975)
lower = apply(draws_mu_diff[2001:T,],2,quantile,probs=0.025)
plot(y_diffs,mean_mus, xlim = c(-1.55,1.55),ylim = c(-1.55,1.55))
points(y_diffs,upper, type= 'l', lwd=2,col = 'red')
points(y_diffs,lower, type= 'l', lwd=2,col = 'red')
plot(c(1:T),Ds, xlab = 'Index')
abline(v=2000, col='green', lwd=2)
mean_mus = colMeans(draws_mu_diff[2001:T,])
D_mean =  -2*sum(log(dnorm(y_diffs,mean_mus,sqrt(0.05))))
p_d = mean(Ds[2001:T])-D_mean
DIC = 2*mean(Ds[2001:T])-D_mean
DIC_null = -2*sum(log(dnorm(y_diffs,0,sqrt(0.05))))
draws_p1 = rep(0,T)
p1 = 0.5
tau_2=1/5
for(t in 1:T){
Like0 = (1-p1)*dnorm(y_diffs,0,sqrt(0.05))
LikeNot0 = p1*dnorm(y_diffs,0,sqrt(0.05+tau_2))
Probs1 = LikeNot0/(Like0+LikeNot0)
Indicator = rbinom(n=500,1,Probs1)
mus[Indicator==0] = 0
NumNot0 = sum(Indicator)
mus[Indicator==1]=rnorm(NumNot0, tau_2*y_diffs[Indicator==1]/(tau_2+0.05), sqrt(0.05*tau_2/(tau_2+0.05)))
tau_2 =1/rgamma(1,NumNot0/2, 0.5*sum(mus[Indicator==1]^2))
p1 = rbeta(1,1+NumNot0,1+500-NumNot0)
draws_p1[t] = p1
draws_tau_2[t] = tau_2
draws_mu_diff[t,] = mus
Ds[t] = -2*sum(log(dnorm(y_diffs,mus,sqrt(0.05))))
}
plot(c(1:T),draws_tau_2, xlab = 'Index')
abline(v=2000, col='green', lwd=2)
plot(c(1:T),draws_p1, xlab = 'Index')
abline(v=2000, col='green', lwd=2)
plot(c(1:T),draws_mu_diff[,500],ylim = c(-1.1,1.1), xlab = 'Index')
points(c(1:T),draws_mu_diff[,1], col = 'red')
points(c(1:T),draws_mu_diff[,21], col = 'blue')
abline(v=BurnIn, col="green", lwd=2)
ProbRed = 1-sum(draws_mu_diff[2001:T,1]==0)/N
ProbBlue = 1-sum(draws_mu_diff[2001:T,21]==0)/N
ProbBlack = 1-sum(draws_mu_diff[2001:T,500]==0)/N
mean_mus = colMeans(draws_mu_diff[2001:T,])
D_mean =  -2*sum(log(dnorm(y_diffs,mean_mus,sqrt(0.05))))
p_d = mean(Ds[2001:T])-D_mean
DIC = 2*mean(Ds[2001:T])-D_mean
DIC
L = 1/theta^n
theta = 2.5
n=10
L = 1/theta^n
L = 1/theta^n
n=10
theta = 2.5
L = 1/theta^n
D = log(L)
D = -2*log(L)
DIC = 5*var(D) + mean(D)
# Distribucion a priori Experto 2
alpha_Prior_EXP2= c(1.5, 1.7, 2.0, 4.9)
Dist_Prior_Exp2 = rpareto(10,alpha_Prior_EXP2)
Media_Col_Exp2=colMeans(Dist_Prior_Exp2)
a1=1/2 ; a2=1/2 ; a3=1/2 ; a4=1/2
x1=13  ; x2=13  ; x3=13  ; x4=13 ; n=x1+x2+x3+x4
s<- rpareto(10, c(a1,a2,a3,a4))
t1<-s[,1] ; t2<-s[,2] ; t3<-s[,3] ; t4<-s[,4]
s
a1=1/2 ; a2=1/2 ; a3=1/2 ; a4=1/2
x1=13  ; x2=13  ; x3=13  ; x4=13 ; n=x1+x2+x3+x4
s<- rpareto(10000, c(a1,a2,a3,a4))
t1<-s[,1] ; t2<-s[,2] ; t3<-s[,3] ; t4<-s[,4]
x1=13  ; x2=13  ; x3=13  ; x4=13 ; n=x1+x2+x3+x4
s<- rpareto(10, c(a1,a2,a3,a4))
13+13+13+13
13+13
13+13+13+13
1
2
1+2
source('~/.active-rstudio-document', echo=TRUE)
library(EnvStats)
library(MCMCpack)
1+2
13+13+13+13
a1=1/2 ; a2=1/2 ; a3=1/2 ; a4=1/2
x1=13  ; x2=13  ; x3=13  ; x4=13 ; n=x1+x2+x3+x4
s<- rpareto(10, c(a1,a2,a3,a4))
t1<-s[,1] ; t2<-s[,2] ; t3<-s[,3] ; t4<-s[,4]
a1=1/2 ; a2=1/2 ; a3=1/2 ; a4=1/2
x1=13  ; x2=13  ; x3=13  ; x4=13 ; n=x1+x2+x3+x4
s<- rdirichlet(10000, c(a1,a2,a3,a4))
t1<-s[,1] ; t2<-s[,2] ; t3<-s[,3] ; t4<-s[,4]
Dtp<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1p) + x2*log(t2p) +
x3*log(t3p) + x4*log(t4p))
Devianza<- mean(D)-Dtp + mean(D) ; Devianzalibrary(MCMCpack)
a1=1/2 ; a2=1/2 ; a3=1/2 ; a4=1/2
t1p<-mean(t1) ; t2p<-mean(t2) ; t3p<-mean(t3) ; t4p<-mean(t4)
D<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1) + x2*log(t2) +
x3*log(t3) + x4*log(t4))
Dtp<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1p) + x2*log(t2p) +
x3*log(t3p) + x4*log(t4p))
Devianza<- mean(D)-Dtp + mean(D) ; Devianzalibrary(MCMCpack)
library(MCMCpack)
Devianza<- mean(D)-Dtp + mean(D) ; Devianzalibrary(MCMCpack)
Dtp<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1p) + x2*log(t2p) +
x3*log(t3p) + x4*log(t4p))
Devianza<- mean(D)-Dtp + mean(D) ; Devianzalibrary(MCMCpack)
a1=1/2 ; a2=1/2 ; a3=1/2 ; a4=1/2
x1=13  ; x2=13  ; x3=13  ; x4=13 ; n=x1+x2+x3+x4
s<- rdirichlet(10000, c(a1,a2,a3,a4))
t1<-s[,1] ; t2<-s[,2] ; t3<-s[,3] ; t4<-s[,4]
t1p<-mean(t1) ; t2p<-mean(t2) ; t3p<-mean(t3) ; t4p<-mean(t4)
D<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1) + x2*log(t2) +
x3*log(t3) + x4*log(t4))
Dtp<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1p) + x2*log(t2p) +
x3*log(t3p) + x4*log(t4p))
Devianza<- mean(D)-Dtp + mean(D) ; Devianza
a1=1/2 ; a2=1/2 ; a3=1/2 ; a4=1/2
x1=13  ; x2=13  ; x3=13  ; x4=13 ; n=x1+x2+x3+x4
s<- rdirichlet(10000, c(a1,a2,a3,a4))
t1<-s[,1] ; t2<-s[,2] ; t3<-s[,3] ; t4<-s[,4]
t1p<-mean(t1) ; t2p<-mean(t2) ; t3p<-mean(t3) ; t4p<-mean(t4)
D<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1) + x2*log(t2) +
x3*log(t3) + x4*log(t4))
Dtp<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1p) + x2*log(t2p) +
x3*log(t3p) + x4*log(t4p))
Devianza<- mean(D)-Dtp + mean(D) ; Devianzalibrary(MCMCpack)
a1=1/2 ; a2=1/2 ; a3=1/2 ; a4=1/2
x1=13  ; x2=13  ; x3=13  ; x4=13 ; n=x1+x2+x3+x4
s<- rdirichlet(10000, c(a1,a2,a3,a4))
t1<-s[,1] ; t2<-s[,2] ; t3<-s[,3] ; t4<-s[,4]
t1p<-mean(t1) ; t2p<-mean(t2) ; t3p<-mean(t3) ; t4p<-mean(t4)
D<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1) + x2*log(t2) +
x3*log(t3) + x4*log(t4))
Dtp<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1p) + x2*log(t2p) +
x3*log(t3p) + x4*log(t4p))
Devianza<- mean(D)-Dtp + mean(D) ; Devianza
a1=1/2 ; a2=1/2
x1=13  ; x2=13; n=x1+x2
s<- rdirichlet(10000, c(a1,a2))
t1<-s[,1] ; t2<-s[,2] ; t3<-s[,3] ; t4<-s[,4]
t1<-s[,1] ; t2<-s[,2]
t1p<-mean(t1) ; t2p<-mean(t2) ; t3p<-mean(t3) ; t4p<-mean(t4)
D<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1) + x2*log(t2) +
x3*log(t3) + x4*log(t4))
Dtp<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1p) + x2*log(t2p) +
x3*log(t3p) + x4*log(t4p))
Devianza<- mean(D)-Dtp + mean(D) ; Devianzalibrary(MCMCpack)
a1=1/2 ; a2=1/2 ; a3=1/2 ; a4=1/2
x1=13  ; x2=13  ; x3=13  ; x4=13 ; n=x1+x2+x3+x4
s<- rdirichlet(10000, c(a1,a2,a3,a4))
t1<-s[,1] ; t2<-s[,2] ; t3<-s[,3] ; t4<-s[,4]
t1p<-mean(t1) ; t2p<-mean(t2) ; t3p<-mean(t3) ; t4p<-mean(t4)
D<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1) + x2*log(t2) +
x3*log(t3) + x4*log(t4))
Dtp<- -2*(log(gamma(n+1)) - log(gamma(x1+1)) - log(gamma(x2+1)) -
log(gamma(x3+1)) + log(gamma(x4+1)) +  x1*log(t1p) + x2*log(t2p) +
x3*log(t3p) + x4*log(t4p))
Devianza<- mean(D)-Dtp + mean(D) ; Devianza
a1=2.5 ; a2=4
x1=13  ; x2=13; n=x1+x2
s<- rpareto(10000, c(a1,a2))
t1<-s[,1] ; t2<-s[,2]
t1p<-mean(t1) ; t2p<-mean(t2) ; t3p<-mean(t3) ; t4p<-mean(t4)
a1=2.5 ; a2=4
x1=13  ; x2=13; n=x1+x2
s<- rdirichlet(10000, c(a1,a2))
t1<-s[,1] ; t2<-s[,2]
t1p<-mean(t1) ; t2p<-mean(t2) ; t3p<-mean(t3) ; t4p<-mean(t4)
require(R2jags)
##example model file
model.file <- system.file(package="R2jags", "model", "schools.txt")
file.show(model.file)
##data
J <- 8.0
y <- c(28.4,7.9,-2.8,6.8,-0.6,0.6,18.0,12.2)
sd <- c(14.9,10.2,16.3,11.0,9.4,11.4,10.4,17.6)
##arrange data in list
jags.data <- list (J = J, y = y, sd = sd)
##initial values
jags.inits <- function(){
list(theta=rnorm(J, 0, 100), mu=rnorm(1, 0, 100),
sigma=runif(1, 0, 100))
}
##parameters to be monitored
jags.parameters <- c("theta", "mu", "sigma")
##run model
schools.sim <- jags(data = jags.data, inits = jags.inits,
parameters = jags.parameters,
model.file = model.file,
n.chains = 3, n.iter = 10)
##extract DIC
DIC(schools.sim)
##extract pD
DIC(schools.sim, return.pD = TRUE)
detach(package:R2jags)
require(R2jags)
B = 10^6;  n = 25;  th = 10
M = replicate(B, max(runif(n, 0, th)) )
mean(M);  (n/(n+1))*th
[1] 9.615483                  # aprx E(M)
[1] 9.615385                  # exact E(M)
M.u = ((n+1)/n)*M;  mean(M.u)
[1] 10.0001                   # aprx E(M.u) = 10
hist(M, prob=T, col="skyblue2")
#https://rpubs.com/juliantellez/Eleccion-de-lambda-regresion-no-parametrica
#----------------------------------------------------------------------------------------#
setwd("/Users/cesar.saavedra/Documents/GitHub/MLG-NP_Tarea4")
#----------------------------------------------------------------------------------------#
library(readxl)
library(dplyr)
library(lubridate)
library(ggplot2)
library(purrr)
library(readr)
# https://rpubs.com/juliantellez/estimacion-series-de-furier
#----------------------------------------------------------------------------------------#
# Cargar los datos
Datos2  <- read_delim("OzonoCompartir2019.csv",
";", escape_double = FALSE,
col_types = cols(`Fecha & Hora` = col_datetime(format = "%d/%m/%Y %H:%M"),
O3 = col_number(), Temperatura = col_number(), Humedad = col_number(),
RadiacionSolar = col_number()),
locale = locale(decimal_mark = ",", grouping_mark = "."),
trim_ws = TRUE)
Datos2
#----------------------------------------------------------------------------------------#
ggplot() +
geom_line(data = x, aes(x = hora, y = O3, color = dia))+
labs(y = expression(O[3]))
#----------------------------------------------------------------------------------------#
ggplot() +
geom_line(data = Datos2, aes(x = hora, y = O3, color = dia))+
labs(y = expression(O[3]))
#----------------------------------------------------------------------------------------#
ggplot() +
geom_line(data = Datos2, aes(x = `Fecha & Hora`, y = O3, color = dia))+
labs(y = expression(O[3]))
#----------------------------------------------------------------------------------------#
ggplot() +
geom_line(data = Datos2, aes(x = `Fecha & Hora`, y = O3))+
labs(y = expression(O[3]))
x <- Datos2  %>%
dplyr::select(`Fecha & Hora`, O3) %>%
mutate(dia = day(`Fecha & Hora`)) %>%
filter(dia %in% c(5,6,7,8,9)) %>%
group_by(dia) %>%
mutate(hora = row_number()) %>%
ungroup() %>%
#mutate(hora_normada = (2*hora - 1)/(2*24)) %>%
mutate(dia = as.factor(dia))
x
#----------------------------------------------------------------------------------------#
ggplot() +
geom_line(data = x, aes(x = hora, y = O3, color = dia))+
labs(y = expression(O[3]))
ggplot()+
geom_point(data = x, aes(x = hora, y = O3)) +
labs(y = expression(O[3]))+ facet_wrap(~dia)
View(x)
x <- Datos2  %>%
dplyr::select(`Fecha & Hora`, O3) %>%
mutate(dia = day(`Fecha & Hora`)) %>%
filter(dia %in% c(5,6,7,8,9)) %>%
group_by(dia) %>%
mutate(hora = row_number()) %>%
ungroup() %>%
mutate(hora_normada = (2*hora - 1)/(2*24)) %>%
mutate(dia = as.factor(dia))
x
ggplot()+
geom_point(data = x, aes(x = hora, y = O3)) +
labs(y = expression(O[3]))+ facet_wrap(~dia)
View(x)
hora
x$hora
x <- Datos2  %>%
dplyr::select(`Fecha & Hora`, O3) %>%
mutate(dia = day(`Fecha & Hora`)) %>%
#filter(dia %in% c(5,6,7,8,9)) %>%
group_by(dia) %>%
mutate(hora = row_number()) %>%
ungroup() %>%
mutate(hora_normada = (2*hora - 1)/(2*24)) %>%
mutate(dia = as.factor(dia))
x
View(x)
#----------------------------------------------------------------------------------------#
ggplot() +
geom_line(data = x, aes(x = hora, y = O3, color = dia))+
labs(y = expression(O[3]))
x %>% filter(dia %in% 1)
x
View(x)
ggplot()+
geom_point(data = x, aes(x = hora, y = O3)) +
labs(y = expression(O[3]))+ facet_wrap(~dia)
plot(x=ozono$Hora[1:24],y=ozono$O3[1:24])
plot(x=x$Hora[1:24],y=x$O3[1:24])
View(x)
plot(x=x$Hora[1:23],y=x$O3[1:23])
Datos2  <- read_delim("ozono.xls", ";", escape_double = FALSE,
col_types = cols(`Fecha & Hora` = col_datetime(format = "%d/%m/%Y %H:%M")),
trim_ws = TRUE)
Datos2
x <- Datos2  %>%
dplyr::select(`Fecha & Hora`, O3) %>%
mutate(dia = day(`Fecha & Hora`)) %>%
#filter(dia %in% c(5,6,7,8,9)) %>%
group_by(dia) %>%
mutate(hora = row_number()) %>%
ungroup() %>%
mutate(hora_normada = (2*hora - 1)/(2*24)) %>%
mutate(dia = as.factor(dia))
x
ggplot() +
geom_line(data = x, aes(x = hora, y = O3, color = dia))+
labs(y = expression(O[3]))
View(x)
View(x)
Datos2  <- read_delim("ozono.xls", ";", escape_double = FALSE,
col_types = cols(`Fecha & Hora` = col_datetime(format = "%d/%m/%Y %H:%M")),
trim_ws = TRUE)
Datos2
x <- Datos2  %>%
dplyr::select(`Fecha & Hora`, O3) %>%
mutate(dia = day(`Fecha & Hora`)) %>%
filter(dia %in% c(5,6,7,8,9)) %>%
group_by(dia) %>%
mutate(hora = row_number()) %>%
ungroup() %>%
mutate(hora_normada = (2*hora - 1)/(2*24)) %>%
mutate(dia = as.factor(dia))
x
View(x)
ggplot() +
geom_line(data = x, aes(x = hora, y = O3, color = dia))+
labs(y = expression(O[3]))
x
ggplot()+
geom_point(data = x, aes(x = hora, y = O3)) +
labs(y = expression(O[3]))+ facet_wrap(~dia)
View(x)
View(Datos2)
plot(x=Datos2$Hora[1:23],Datos2=x$O3[1:23])
plot(x=Datos2$Hora[1:24],Datos2=x$O3[1:24])
Datos2  <- read_delim("ozono.xls", ";", escape_double = FALSE,
col_types = cols(`Fecha & Hora` = col_datetime(format = "%d/%m/%Y %H:%M")),
trim_ws = TRUE)
Datos2
names(Datos2)
View(Datos2)
Datos2  <- read_delim("ozono.xls", ";", escape_double = FALSE,
col_types = cols(`Fecha & Hora` = col_datetime(format = "%d/%m/%Y %H:%M")),
trim_ws = TRUE)
Datos2
View(Datos2)
x <- Datos2  %>%
dplyr::select(`Fecha & Hora`, O3) %>%
mutate(dia = day(`Fecha & Hora`)) %>%
filter(dia %in% c(5,6,7,8,9)) %>%
group_by(dia) %>%
#mutate(hora = row_number()) %>%
#ungroup() %>%
#mutate(hora_normada = (2*hora - 1)/(2*24)) %>%
mutate(dia = as.factor(dia))
x
View(x)
ggplot() +
geom_line(data = x, aes(x = dia, y = O3))+
labs(y = expression(O[3]))
ggplot()+
geom_point(data = x, aes(x = dia, y = O3)) +
labs(y = expression(O[3]))+ facet_wrap(~dia)
View(Datos2)
ggplot() + geom_line(data = Datos2, aes(x = hora, y = O3))+ abs(y = expression(O[3]))
ggplot() + geom_line(data = Datos2, aes(x = Hora, y = O3))+ abs(y = expression(O[3]))
ggplot() + geom_line(data = Datos2, aes(x = Hora, y = O3))
ggplot()+ geom_point(data = Datos2, aes(x = hora, y = O3)) + facet_wrap(~dia)
ggplot()+ geom_point(data = Datos2, aes(x = Hora, y = O3)) + facet_wrap(~dia)
ggplot()+ geom_point(data = Datos2, aes(x = Hora, y = O3))
plot(x=Datos2$Hora[1:24],Datos2=x$O3[1:24])
Datos2  <- read_delim("ozono.xls", ";", escape_double = FALSE,
col_types = cols(`Fecha & Hora` = col_datetime(format = "%d/%m/%Y %H:%M")),
trim_ws = TRUE)
Datos2
# https://rpubs.com/juliantellez/estimacion-series-de-furier
#----------------------------------------------------------------------------------------#
# Cargar los datos
Datos2 <- read_excel("ozono.xls")
# https://rpubs.com/juliantellez/estimacion-series-de-furier
#----------------------------------------------------------------------------------------#
# Cargar los datos
Datos2 <- read_excel("ozono.xls")
Datos2  <- read_delim("ozono.xls", ";", escape_double = FALSE,
col_types = cols(`Fecha & Hora` = col_datetime(format = "%d/%m/%Y %H:%M")),
trim_ws = TRUE)
View(Datos2)
plot(x=Datos2$Hora[1:24],Datos2=x$O3[1:24])
View(Datos2)
x <- Datos2  %>%
dplyr::select(`Fecha & Hora`, O3) %>%
mutate(dia = day(`Fecha & Hora`)) %>%
filter(dia %in% c(5,6,7,8,9)) %>%
group_by(dia) %>%
mutate(hora = row_number()) %>%
ungroup() %>%
mutate(hora_normada = (2*hora - 1)/(2*24)) %>%
mutate(dia = as.factor(dia))
x
ggplot() +
geom_line(data = Datos2, aes(x = hora, y = O3))+
labs(y = expression(O[3]))
View(x)
ggplot() +
geom_line(data = x, aes(x = hora, y = O3))+
labs(y = expression(O[3]))
ggplot()+
geom_point(data = Datos2, aes(x = hora, y = O3)) +
labs(y = expression(O[3]))+ facet_wrap(~dia)
ggplot()+
geom_point(data = x, aes(x = hora, y = O3)) +
labs(y = expression(O[3]))+ facet_wrap(~dia)
